{"version":3,"file":"5.70bd4c87392669fd3322.hot-update.js","sources":["webpack:///client/components/inventory/coins/Coins.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport Proptypes from \"prop-types\";\n\nimport CoinsStyle from \"./Coins.scss\";\nimport Coin from \"./Coin\";\n\nclass Coins extends Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n  render() {\n    console.log(this.props.orderByPrice);\n    const { dataCategories, dataCoins, orderByPrice } = this.props;\n    let filterCoin = [];\n    let dataCoinsClean = [];\n    dataCoins.map((coin, index) => {\n      coin.categories.filter(category => {\n        dataCategories.filter(categoryChecked => {\n          if (\n            categoryChecked.name === category &&\n            categoryChecked.checked === true\n          ) {\n            filterCoin.push(coin);\n            filterCoin.filter((coin, index, arra) => {\n              arra.map((item, pos) => {\n                if (item._id === coin._id && pos !== index) {\n                  arra.splice(pos, 1);\n                }\n                dataCoinsClean = arra;\n                if (filterCoin.length === index + 1) {\n                  if (orderByPrice === false) {\n                    dataCoinsClean.sort((a, b) => {\n                      Number(a.price) - Number(b.price);\n                    });\n                  } else {\n                    dataCoinsClean.sort(\n                      (a, b) => Number(a.price) - Number(b.price)\n                    );\n                  }\n                }\n              });\n            });\n          }\n        });\n      });\n    });\n\n    const coinsData = dataCoinsClean.map(coin => (\n      <Coin key={coin._id} coinData={coin} />\n    ));\n\n    return (\n      <>\n        <style dangerouslySetInnerHTML={{ __html: CoinsStyle }} />{\" \"}\n        <div className=\"col-xl-11 col-lg-11 mr-auto\">\n          <div className=\"row\">\n            <div className=\"col-xl-2 col-lg-2 ml-auto\">\n              <ButtonDropdown\n                isOpen={this.state.dropdownOpen}\n                toggle={this.toggle}\n                className=\"ml-auto\"\n              >\n                <DropdownToggle color=\"$lightgrey\" size=\"sm\">\n                  ORDER BY\n                </DropdownToggle>\n                <DropdownMenu>\n                  <DropdownItem>PRICE: LOW TO HIGH</DropdownItem>\n                  <DropdownItem>PRICE: HIGH TO LOW</DropdownItem>\n                </DropdownMenu>\n              </ButtonDropdown>{\" \"}\n            </div>{\" \"}\n          </div>\n          <div className=\"row h-100\">{coinsData}</div>\n        </div>\n      </>\n    );\n  }\n}\n\nCoins.propTypes = {\n  dataCoins: Proptypes.arrayOf(Object).isRequired,\n  dataCategories: Proptypes.arrayOf(Object).isRequired,\n  orderByPrice: Proptypes.bool.isRequired\n};\n\nexport default Coins;\n\n\n\n// WEBPACK FOOTER //\n// client/components/inventory/coins/Coins.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAMA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AADA;AAHA;AAMA;AACA;;;AAAA;AACA;AACA;AADA;AAGA;;;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA/EA;AACA;AAiFA;AACA;AACA;AACA;AAHA;AAMA;;;;A","sourceRoot":""}